function [Y,Xf,Af] = testMatcherTrackletJoinerANN(X,~,~)
%TESTMATCHERTRACKLETJOINERANN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 17-Jul-2014 17:59:58.
% 
% [Y] = testMatcherTrackletJoinerANN(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 105xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_remove = [2 14 15 16 22 23 24 30 31 32 33 38 43 48 53 58 73 78 83 88 100];
  x1_step1_keep = [1 3 4 5 6 7 8 9 10 11 12 13 17 18 19 20 21 25 26 27 28 29 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 54 55 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76 77 79 80 81 82 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99 101 102 103 104 105];
  x1_step2_xoffset = [0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3.59722835128196e-05;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;-1.61909508705139];
  x1_step2_gain = [0.0136054421768707;2.90652540942163;2.03594339769179;2.22453971037998;2.2661917770324;2.66934324134796;3.82592962655991;5.52634296895388;8.92691135544028;21.2014145573032;21.3158949357296;149.211258625831;2.15238198726946;3.23195131002918;2.89185261997406;20.0758560709365;110.326792142022;2.16176805791407;2.53657463776784;2.11370854694141;8.15287624578416;100.697570935707;13.8082107673563;6.90410538367816;4.82182539825101;4.38853737271326;8.95823650438382;6.58280605906989;5.34373974790435;6.26276490399498;12.4365055700217;7.03562333417449;5.09501548573835;6.89347525784972;10.4642249520557;6.49999975785614;5.14241607225711;7.44983228435196;14.7648223857065;6.24499828680726;4.72941282264113;6.65732687383463;16.0277532493858;6.90410538367816;4.5981361714041;4.58257560677817;43.3589677406016;13.8082107673563;7.45117477070123;5.19025768043141;4.87339729252091;43.3589677406016;12.020815295909;7.46190306544748;5.30690742346193;7.03562333417449;10.8397419351504;6.51152815179889;5.93158261916995;9.91071258210701;12.4365055700217;5.42627363533498;5.25873755877293;6.19677356028073;12.3648250792599;6.05530078327738;5.16397764900917;6.892024659714;11.4891250363589;6.21825278501086;4.83045882217874;4.39851552995242;2;2;2;2;2;2;2;0.00470588235294118;0.00680272108843537;1.10726643598616e-05;2.31385071035217e-05;0.686894241348036];
  x1_step2_ymin = -1;
  
  % Layer 1
  b1 = [-0.25353333083164186768;0.255595829004591657;-0.40870042303885129042;-0.87322400504363884011];
  IW1_1 = [0.14694806049960651428 0.20632382407066970909 0.20119382137116248455 0.13493787546005139855 0.20992512981473912537 0.17513852419463935006 0.17102979946365298725 0.17990243040867681668 0.21018718511637338175 0.22642372184973780236 0.24895374260867661476 0.2535333308316419787 0.19431497162957422908 0.21823379199848555454 0.16628698899520136245 0.17346213681453231947 0.20505412548409762685 0.19896290225273394192 0.20514913312083485342 0.16197826235045703624 0.19492639312024870324 0.16011311442912584679 0.21760354655806790625 0.10865661904129157722 0.12067148002257536976 0.10074679273547806901 0.21167544125021206525 0.1144933527206003776 0.13612395525928627782 0.084265395896551631427 0.22703821236190047106 0.10114165742285016747 0.14586505822485171247 0.12003106333489976798 0.19330871971424659628 0.075174586154236944235 0.11540829540142626131 0.11391031601585474564 0.21657863454642189982 0.11937695093386871403 0.15559560672317576668 0.13672878243394795406 0.20454805768236497543 0.18386395033184244063 0.14545163722836657039 0.096151113981948310716 0.20380073805280340959 0.17642137551337494505 0.14300290782219143848 0.12631326129431055816 0.10055576291606195538 0.21351607877854589246 0.21349313343867579174 0.067345626388153528863 0.12403618219813090928 0.089697679022151310946 0.20473074279620459559 0.080820818147028447576 0.10936489999289965291 0.12721291792403163767 0.23580584298035658919 0.16164822952487253871 0.12758070239835495041 0.15467316749611967341 0.22741170638174418306 0.11273254069023484758 0.14293895613598728289 0.1020439022638579829 0.22957459892532072754 0.17494623680230958485 0.079196474032584077141 0.10974537980670971693 0.16772269121369304257 0.14725464691625778091 0.16091003082540267233 0.25133626514701251642 0.25772192558273659957 0.12378621632626997384 0.1882386319719519252 0.16698071072960621319 0.10336458799218441185 0.22240799921811035822 0.22696362832392211195 -0.037465872748367531897;-0.15386483660318805988 -0.088355626653588204 0.12493611964079098797 -0.099082139190384985183 0.043031143768461274646 0.015926830304902064861 -0.079344941759463258335 -0.16845749227140385806 -0.21184377293725287217 -0.23261423577020504116 -0.25193652642645281148 -0.25559582900459154597 0.059118797474418213755 0.030374861009080919572 -0.092962553128783931289 -0.18916329168630149904 -0.24753508732493079147 0.06241658180133922984 -0.1193415358471303922 -0.05766479218750140967 -0.18380922444281089234 -0.21583204692102928024 -0.18703970585289944606 -0.07069694455367861452 -0.13986050504688929408 -0.093965513043988285746 -0.18312152608825837952 -0.10060294218169360536 -0.08156720944026360498 -0.15789210301733141995 -0.074625691760019763343 -0.058929095751127313907 -0.086227124785569986276 -0.1461475501414972733 -0.11458723613568810862 -0.096371699544517408498 -0.080043089024924518604 -0.1859593602909823673 -0.17844881236781376388 -0.064239437254869330429 -0.033634492275621513668 -0.1315271186381523072 -0.15228534610267258076 0.046577113878114972945 -0.099180426344799510474 -0.090546000521408265271 -0.09355833203295822742 -0.055558802689364694682 -0.034789865503162209492 -0.14490617647227818643 -0.15220307037059083166 -0.089882284867367906456 -0.095821121495970829063 -0.10334396578603959049 -0.015224803612073359305 -0.1416220616896671225 -0.015361251589105978654 -0.045366682618978512731 -0.044699200495616334128 -0.15112608356544166011 -0.14497482799025154798 -0.088311359364291214247 -0.08680579218670392283 -0.16738517236137029354 -0.15305008686752946678 -0.041545972445857032307 -0.14492585998682555593 -0.12543107765709238244 -0.1482095571607655593 -0.024114323524714362246 -0.11102704080321999791 -0.080057656231134352587 -0.079609031402736202265 -0.032764028178347018305 -0.028732662705346245779 -0.25827641005181745104 -0.19698441622911347371 -0.15047911909614686277 -0.25109158159723277137 -0.06158428025779458248 -0.092260447830337502517 -0.17299723601974495435 -0.2281313366071476556 0.086370061006879356169;-0.079059345077753820363 0.12158121634940513567 0.10777246704604957761 0.2038963841113476394 0.41936650769720357212 0.10604041711954557969 0.012312195083846410454 0.013065935735204307899 0.13929649948770950196 0.10046436408243984706 0.36012092558500424788 0.40870042303888026725 0.027057598711019523186 0.207426495368802144 -0.06507260091730503182 -0.183412121353479729 -0.14418562997683656568 0.043380890338575332776 0.34662436603341295616 -0.15149256980856987131 -0.013243860135164306491 -0.049378012649401156753 -0.068982317648373800423 -0.067800493389933311206 -0.030855558928843236643 0.0091806678414176057235 0.0099123864518674761892 0.044329202629298569693 0.11804451499667302505 -0.061168684232532154199 0.17638487221917920067 0.044856639005497009332 0.087994468039340412169 0.050935123439782792332 0.066413579440740985738 -0.049180182886087976668 0.086133815253656889621 -0.090416360851220456407 0.0054799916963935713099 0.083185606249310359295 0.1519232767555177277 -0.024872182186832167416 -0.063841457989137817552 0.17933603199526201855 0.031744016786871068203 -0.10717211467855279616 -0.16848228524139846618 -0.13444728901599573012 0.028714763775202246932 -0.020293730426685994972 -0.12272300028500961189 -0.087549503896118985313 0.20586421184741385271 0.078055368597232971384 -0.01822271735192911371 -0.15260459940520726407 0.16713142793681123877 0.0020723162407781312022 0.1157272310208142807 -0.046622948555128350401 0.063624413374832211598 0.17305912156634298271 -0.031138546782452182493 0.078734565213799956318 -0.034221222071696734413 0.10206349895262008254 0.062936955612151845862 0.033526539573144630013 0.15324125121523812787 0.087660261409679376965 -0.056339739112246989272 0.013507800557324117774 0.022606097558547907922 0.095352745399532451431 0.18895955022525814937 0.07449393337202947496 0.044283153023822269256 0.032264823038880341421 0.11987781612365007444 0.09160996843345031726 -1.0029112255595695746 0.33453019177384452076 0.98049125895673860942 0.058022115769786282435;0.45988751203259570222 0.34866601609540881501 -0.76164209217693912279 -0.21767475240343953091 -0.28588730802495565531 -0.14275759733070153557 0.19119763406613696222 0.51778703010154258912 0.68210839545998291911 0.69693859857814466352 0.84906017729479799083 0.8732240050436442802 -0.32155678917439173281 -0.16084380833930939092 0.19435435706780962439 0.54704355996757259017 0.69688245996409436955 -0.3932829901064179845 0.41878668504770705239 -0.033815474609045215182 0.53555802656327500255 0.66681886071895968282 0.5547452172059068598 0.20154164594142423561 0.35945171526556912722 0.2592910775396933265 0.48422176052745607988 0.074791815531180777521 0.19644286133844407471 0.3952460041251858458 0.047953566045852491495 0.071530325318001408696 0.26718423112004974218 0.28558767803128415341 0.20983903312785406881 0.27421346656112477458 0.13557083388820470593 0.389934588850807895 0.26881287145526477911 0.1241362508627265604 0.20567315074095648963 0.40459565503885913662 0.34197196471607194113 -0.19837848922756570746 0.41614337698062014992 0.27737922555834437777 0.60052386393936196818 0.38596872872623799733 0.15927501663210141825 0.41280350642295549068 0.40932188229485688691 0.55119132908625256828 0.29614128917577159372 -0.058977097526026256435 0.26287294522245097106 0.44681219576511238545 0.13713817108233566922 0.14918602355893645361 0.12142546636342341215 0.44580640062840998228 0.24818876744119833244 0.11510576426801447103 0.117459630737175455 0.40166344235166545618 0.38527860905830652039 0.11595042631868582306 0.42536195591199177368 0.36260590160743122468 0.54630126861841676877 0.20383011718430715797 0.33336176153467611538 0.21047207918544458272 0.4000890732772066638 0.21703507192201404452 0.37674704590216012701 0.66876510773742570137 0.4501308315224021861 0.097003523023643803413 0.27958291801019441447 -0.60050687129824742438 -1.0346523995806671259 0.27440440383179498518 0.71638245498463115624 -0.29640018565116349469];
  
  % Layer 2
  b2 = -32.983980216211378433;
  LW2_1 = [37.430066829126239725 -32.703362354117253119 27.671073568304834112 30.73615650780651265];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
  if isempty(settings_remove)
    y = x;
  else
    y = x(settings_keep,:);
  end
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
