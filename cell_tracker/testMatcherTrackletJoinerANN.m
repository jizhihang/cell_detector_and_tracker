function [Y,Xf,Af] = testMatcherTrackletJoinerANN(X,~,~)
%TESTMATCHERTRACKLETJOINERANN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 19-Jul-2014 18:48:25.
% 
% [Y] = testMatcherTrackletJoinerANN(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 108xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_remove = [2 14 15 16 22 23 24 30 31 32 33 38 43 48 53 58 73 78 83 88 100 107 108];
  x1_step1_keep = [1 3 4 5 6 7 8 9 10 11 12 13 17 18 19 20 21 25 26 27 28 29 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 54 55 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76 77 79 80 81 82 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99 101 102 103 104 105 106];
  x1_step2_xoffset = [0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3.59722835128196e-05;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;-4.09213972091675];
  x1_step2_gain = [0.0136054421768707;2.90652540942163;2.03594339769179;2.22453971037998;2.2661917770324;2.66934324134796;3.82592962655991;5.52634296895388;8.92691135544028;21.2014145573032;21.3158949357296;149.211258625831;2.15238198726946;3.23195131002918;2.89185261997406;20.0758560709365;110.326792142022;2.16176805791407;2.53657463776784;2.11370854694141;8.15287624578416;100.697570935707;13.8082107673563;6.90410538367816;4.82182539825101;4.38853737271326;8.95823650438382;6.58280605906989;5.34373974790435;6.26276490399498;12.4365055700217;7.03562333417449;5.09501548573835;6.89347525784972;10.4642249520557;6.49999975785614;5.14241607225711;7.44983228435196;14.7648223857065;6.24499828680726;4.72941282264113;6.65732687383463;16.0277532493858;6.90410538367816;4.5981361714041;4.58257560677817;43.3589677406016;13.8082107673563;7.45117477070123;5.19025768043141;4.87339729252091;43.3589677406016;12.020815295909;7.46190306544748;5.30690742346193;7.03562333417449;10.8397419351504;6.51152815179889;5.93158261916995;9.91071258210701;12.4365055700217;5.42627363533498;5.25873755877293;6.19677356028073;12.3648250792599;6.05530078327738;5.16397764900917;6.892024659714;11.4891250363589;6.21825278501086;4.83045882217874;4.39851552995242;2;2;2;2;2;2;2;0.03125;0.00470588235294118;0.00680272108843537;6.13019461510209e-11;2.67695246890572e-10;0.287677045906678];
  x1_step2_ymin = -1;
  
  % Layer 1
  b1 = [0.0076492504337184836702;1.3662234429442281503;0.26280116364166644649;-0.17690505927539268427];
  IW1_1 = [0.005946724970553761945 0.03841560922923328153 -0.033649045073580824416 -0.025619765156495204889 -0.014653527456678987553 -0.072786867806706942452 -0.057046331543423089983 -0.023514852524484663315 0.0042472922764506633106 0.032816052494203475087 0.050277803407021273707 0.05943281982686458853 0.01864120549786139544 0.031388532666547536154 -0.043206827904776021199 -0.048456480879840162224 -0.00092478380122434542757 0.051580691430697510336 -0.030219898815775612239 -0.061557657475922032686 -0.027846389513286412543 -0.049947103389462288447 0.015350275500556717634 0.0085912680745755358458 -0.014677994367678200149 0.012489251689039764306 0.013841813013587781628 0.021957771969053477279 0.031771785176002695361 0.0047294026048646702412 -0.022536659547294581735 -0.0075981076129005712186 0.0045084559879782961506 0.075339794775324903098 0.00072387388499153273395 0.02201520917768399685 -0.0072407365806356482896 0.044494145015849875802 -0.049237348325744452471 0.055012138267922894297 0.043960630372084301409 0.0081934664395608720194 -0.012170068345437164148 0.051446290594460673817 0.063797514098976035313 -0.0034159908094951751435 0.13504001361701431505 0.085020738182312399767 0.029898128473277937184 0.017127174960766704259 -0.0016296173561883666499 0.14766548354352185268 0.079928478677258413265 -0.0096306187700298667709 0.074030372245333347925 0.017221225151450515051 0.12640928413398047625 0.033133143414534708959 0.06868641442344522452 0.074414828998465382126 -0.06151573741373637938 0.032316948789098569328 0.001994687596676180015 0.078986724185703516277 -0.05915718453457904924 0.071659642495110739691 -0.023773631977730007997 0.0037036891316238268815 0.099734212564918822697 0.055001258769902416912 0.08475058367242310764 0.045996359271863469786 -0.071374606389665903872 -0.055130668589050871309 0.16203232417397420151 0.066917219645151487795 0.0053682830814198246108 0.051860048730117645766 0.021711315917742137621 0.043671645004991349603 0.081873334994774643603 0.072863054801152168927 -0.015283851105451003172 -0.01325958176875833075 0.010681175788084468561;-0.051300119005199311395 -0.43134172794139369334 0.050147846214237803975 0.036631171236095175225 -0.25680914061076132171 0.50597972657017198372 -0.13970079087390466221 0.14683939422156438992 -0.057325798578840195252 -0.14214834967789230502 -0.12710733959932282722 0.2671465661096509292 0.17711849158541376204 -0.10190430217317941741 0.061407046651556385086 -0.058010757860751507864 -0.03869152243903590388 0.47371661519910629456 -0.27173900902618414177 -0.064671206380375698131 -0.13186162213473925919 0.022014257885492993783 -0.12548988975679917224 0.038774725215120438293 -0.065076629268425625896 -0.035394826421186777188 0.17908592339892784318 0.071355041888380696391 -0.10185899456933023011 0.012152346832984144837 -0.077830385326859347073 0.0096610164194776276814 0.0067524833237164495758 0.01908729564143717139 0.041723258836497023605 -0.021717088209099854462 -0.025679801649338553776 0.013605781098431177223 0.0084721047285495794388 0.008130501626815087729 0.1241308578392705253 -0.065721160158006941554 -0.01257329682737895471 0.20750950948932575524 -0.089877251176527145349 -0.055658701605884521035 -0.16258889838338377865 0.15335726344912681274 -0.080610956303687142377 0.026266935340101032342 -0.07415480725570593179 -0.22982606858107984538 0.010390023707805187692 0.04512224030489359744 -0.08355722645588627151 0.00079838949569789618467 0.01426841814991276422 0.013372073517378936514 0.040130447247345039929 -0.09836185827425145134 0.055447395835571733347 -0.11320267943211699546 0.10515964773966514356 -0.021369090760055359235 0.065403447997339686504 -0.051351477039555386284 0.20206268740680152773 -0.062514898116189959731 -0.10844272175089945953 -0.069498519594346108708 0.051226371618977230293 -0.0063329962548164392411 -0.097320930992972176643 -0.053065995135508955971 -0.10681680528214790304 -0.07704670828681980943 -0.055040753311780273027 0.038849225959077179904 0.038994365639635999998 0.66782088248299054101 1.7493884667242587394 2.9986237781136937386 -1.1058995424983524281 -1.3180959427169720577 -0.095421975825958710304;-0.15943004736301066848 -0.23331553264617407861 -0.068528970796417246203 -0.030325429833103271365 -0.12620471035111843761 -0.13221184420064763243 -0.17205915010323674652 -0.20894567464898000653 -0.20740941967919923616 -0.19338519829899086799 -0.19501757056385130018 -0.18154272521545314345 -0.14910329366993327338 -0.15479000520488689352 -0.192387126502469058 -0.23916954653718586199 -0.26223720559605417924 -0.14479394815507642957 -0.1966962234068500015 -0.18115676849657844083 -0.23740985377131806899 -0.26391267360486736493 -0.28334718087576266088 -0.13985417530059091051 -0.14012734347904004517 -0.1500057578353014287 -0.21826930642415773298 -0.10069821953360236222 -0.12574090535949419833 -0.15568029848451445107 -0.20958741730307950402 -0.080286103748835671579 -0.10869255925661917839 -0.13675364657996375017 -0.16852122608431083228 -0.14048072007997328137 -0.087123464214340085032 -0.18792653025849476167 -0.18506505889185934088 -0.052307623623174252792 -0.10729313313769456295 -0.1269631973774067446 -0.2239321237468385184 -0.12467502633642445209 -0.12539157747105147966 -0.1525774336883822524 -0.2212068552450604797 -0.20519083169493765317 -0.095418208640464532988 -0.14026529190910944078 -0.11500463874016296495 -0.23881788500439754541 -0.13163775930542179204 -0.10098496722558730765 -0.10674525415679257667 -0.16350736799859946768 -0.13477108717963115492 -0.084158844421164225036 -0.030998492942080440454 -0.13304467117726195835 -0.17965773014385649775 -0.096105628340526175202 -0.11792322821857766091 -0.18165516721155178237 -0.16388838983586254128 -0.083667625806507439634 -0.15138807505621720839 -0.12944685876151915127 -0.20388299187787248257 -0.13694496149924897943 -0.084722066179124699836 -0.10120746100861946482 -0.23409959578591313378 -0.21256553324692722962 -0.10241000755681267664 -0.20542174427906986778 -0.17575721809744979107 -0.060563145050484233634 -0.12211280288038474373 -0.12718275569505518852 -0.067082711276155795876 -0.078294850221026765502 -0.26321028692263931381 -0.24286101225661235747 0.053226608130366059868;0.2076417924106891133 0.18745012892279452887 0.15490645626153143333 -0.12424404182939099983 0.22144542923155247083 0.16203235248065384067 0.29186395634652001485 0.42884057909369666106 0.30682503874789657239 0.23362160519159819172 0.22796640240810206457 0.37013691245400626162 0.26398418741269180643 0.086130270728917199263 0.37537695813240301579 0.33028814055305766306 0.14555325908076302555 0.19857864160068369741 0.017682603098020374666 0.24627913095468900728 0.2420182681511864331 0.060211830545007956339 0.065975236297773964811 0.059538585116997243263 0.089239037305781171439 0.26384395974326951828 0.12692616266214193366 0.12591524407296394994 0.11601265708006112953 0.10977367977032255475 0.13044022421716483517 0.026592647681507330243 0.081443701519487807228 0.052078118469558100367 0.041660627960483719023 0.16417511432261208681 0.042579001519348139149 0.14291632735669751453 0.16621368086269686093 -0.0001908641878678512746 0.1468826464678528454 0.05975665699297186273 0.21950440016856034853 0.20372307235357137167 0.0045502679079458731998 0.2405177062674043742 0.058606540510954437118 0.0034616692566890828672 0.1210173273611238054 0.19134795466225340554 0.068411846244669713424 0.062379804640373251456 0.060240945343077459406 0.14596827220836269823 0.044271189814378823779 0.24981120336308784702 0.098833686862473610346 0.018216825160981619386 0.015011489425916731827 0.049815684858655534528 0.1830854644583641555 0.014512927040909834667 0.080924093229938640071 0.14858583554089996315 0.086331789487936905214 0.047363329074302226718 0.06434161196904622515 0.18050345077937243743 0.07575084735793743973 0.088317633597544228929 0.087101650886966516807 0.13218658231815158532 0.2733528635773508908 0.0496490369642605886 -0.078722147869374980989 0.14524040764961962391 0.11106149595817611797 0.21402237419695696596 0.073543641710371129849 0.2910380044062335636 0.43085012911918818546 0.23718349820342773948 0.51232119735106684821 0.20368427895230906133 -0.028410271877200899554];
  
  % Layer 2
  b2 = -2.2601464184138611024;
  LW2_1 = [-1.261805425656233437 -6.0789340061797112469 1.05596010971379628 2.1312963760246570466];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
  if isempty(settings_remove)
    y = x;
  else
    y = x(settings_keep,:);
  end
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
