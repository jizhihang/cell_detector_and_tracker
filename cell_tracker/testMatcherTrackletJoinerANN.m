function [Y,Xf,Af] = testMatcherTrackletJoinerANN(X,~,~)
%TESTMATCHERTRACKLETJOINERANN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 19-Jul-2014 11:53:17.
% 
% [Y] = testMatcherTrackletJoinerANN(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 106xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_remove = [2 14 15 16 22 23 24 30 31 32 33 38 43 48 53 58 73 78 83 88 100];
  x1_step1_keep = [1 3 4 5 6 7 8 9 10 11 12 13 17 18 19 20 21 25 26 27 28 29 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 54 55 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76 77 79 80 81 82 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99 101 102 103 104 105 106];
  x1_step2_xoffset = [0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3.59722835128196e-05;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;-4.09213972091675];
  x1_step2_gain = [0.0136054421768707;2.90652540942163;2.03594339769179;2.22453971037998;2.2661917770324;2.66934324134796;3.82592962655991;5.52634296895388;8.92691135544028;21.2014145573032;21.3158949357296;149.211258625831;2.15238198726946;3.23195131002918;2.89185261997406;20.0758560709365;110.326792142022;2.16176805791407;2.53657463776784;2.11370854694141;8.15287624578416;100.697570935707;13.8082107673563;6.90410538367816;4.82182539825101;4.38853737271326;8.95823650438382;6.58280605906989;5.34373974790435;6.26276490399498;12.4365055700217;7.03562333417449;5.09501548573835;6.89347525784972;10.4642249520557;6.49999975785614;5.14241607225711;7.44983228435196;14.7648223857065;6.24499828680726;4.72941282264113;6.65732687383463;16.0277532493858;6.90410538367816;4.5981361714041;4.58257560677817;43.3589677406016;13.8082107673563;7.45117477070123;5.19025768043141;4.87339729252091;43.3589677406016;12.020815295909;7.46190306544748;5.30690742346193;7.03562333417449;10.8397419351504;6.51152815179889;5.93158261916995;9.91071258210701;12.4365055700217;5.42627363533498;5.25873755877293;6.19677356028073;12.3648250792599;6.05530078327738;5.16397764900917;6.892024659714;11.4891250363589;6.21825278501086;4.83045882217874;4.39851552995242;2;2;2;2;2;2;2;0.03125;0.00470588235294118;0.00680272108843537;6.13019461510209e-11;2.67695246890572e-10;0.287677045906678];
  x1_step2_ymin = -1;
  
  % Layer 1
  b1 = [-0.2425057416573278557;0.20882498806462901353;0.094832598915822685637;-0.21974027553971034465];
  IW1_1 = [0.16752992147302520065 0.18989851727240433799 0.191603736095432714 -0.30019347901416904012 0.25091299639192726767 -0.52580052649757202943 -0.12123937422901148731 0.015680720718821539172 0.14052671380109579835 0.2306272071729743578 0.20677716998983652896 0.24250574165732194376 0.14275001218442778805 0.20134292907495077163 -0.10739686543552134923 -0.0087016386355353858573 0.08055718123379712603 -0.0021070552664729461784 -0.0098994188420631346048 -0.058862803029642002395 -0.0027195489462386590596 0.11129081701834990514 0.15098646868378803876 0.13754911527929905568 0.17399549088201446412 0.044287657578428486771 0.25202356923194924043 0.063621164621069564715 0.15678359922410281535 0.055037465917228925449 0.10482973629171438157 0.14930754101365917297 0.18906949947114115584 0.3019643347814509049 0.14655359787169197627 0.064411091873659481744 0.06689989929175615968 0.16135019280319212731 0.22558124130018786246 0.0031237573206936257442 -0.041778181709845159386 0.079939443545771440847 0.32730223268318547891 0.15138878036616532086 0.16508837162560396905 0.090449748009580901997 0.26292748224900258647 0.35540990126963084572 0.15177851475555464988 -0.004163407317286010878 0.14335404162003984041 0.24188249942064932174 0.32429395791480053468 0.028893383606462017671 0.14308315801990850735 0.0062578331765250627683 0.19920006355629085726 0.17153260227575259367 0.12014187296199424493 0.27543056954765432476 0.24088999617529030517 0.069369033110181263502 0.10283112344018251194 0.17381139381206001104 0.090431861422325163224 0.0082711195228852112116 0.061113599980468287509 0.14800690610683595039 0.30268099349107818741 0.18735881733502579571 0.081690746391251123359 0.085566533409589196069 0.044105704198402158334 -0.049542833416054581075 0.30605245343220383036 0.24866592072924392776 0.2907125648235151516 0.036617330876302270348 -0.11516871454242695594 0.33489092971528278131 0.082010960498975576938 -0.41863809553526254437 0.29861348287667710544 0.36120166113165125266 -0.064138339722730614012;-0.21964745978280689198 -0.34746690547517566916 -0.068462885528842748473 0.15433472851284213423 -0.081256551078292632573 -0.057513552645253929185 -0.13661618684297105464 -0.18810371326806357706 -0.19122269626970803125 -0.20198766955869412731 -0.19985176140295382585 -0.20882498806463056784 -0.046231736810359053136 -0.1585497063037420995 -0.16287961070284212584 -0.27145964101386255152 -0.27755499922076037889 0.053002437030710169985 -0.15573347878341842199 -0.14328398737666533935 -0.18188636890300627358 -0.25180934491307005452 -0.31679189111352296093 -0.36084266949384669054 -0.12116644927367338502 -0.097617060123941667982 -0.25663742585071641633 0.0027802948512397028524 -0.14373567702274894775 -0.17985897691020261147 -0.080386514240926784658 -0.039181726735289856833 -0.16020384261009082416 -0.151476955229741167 -0.20584905638108602632 -0.14580790967094728328 -0.063322245328470694314 -0.10337298874102150703 -0.36239766295499242776 -0.014151971826186732911 -0.10099205147958850715 -0.19205269241901584687 -0.54895324530216005332 0.010742417474442361031 -0.26520578310694359336 -0.16666940661927953649 -0.54534330479285009208 -0.57610630943948804017 -0.27808526595582033769 -0.060435351661125000233 -0.28807602609472005017 -0.38427102978984489789 -0.25871236754390664059 0.083200577469632719385 -0.20640294625018285046 -0.14551449391739332273 -0.20728672153524316246 -0.18291093619974163609 -0.16209187215886419753 -0.21668023279133627468 -0.28658299479777704644 -0.035601014172774850253 -0.079704728373551386733 -0.14474174065553885304 -0.35833469338478862731 -0.085596988870536752647 -0.10951350171144148826 -0.20227616740566947695 -0.39130388079752403963 -0.42477058138319084835 -0.1933370786126193952 -0.12106018488564489199 -0.115228939538257108 -0.13143736525965488138 -0.23512008616903104508 -0.30964134569600049174 -0.36675444620995895084 -0.077280709488302096188 0.079713355876353850227 0.25115428417462731803 0.64137079370974037218 0.67116825352912201641 -0.14346561305392799279 -0.17881131915920073228 0.12827056162018238283;-0.062160228948955058292 0.014615326827208729998 0.42862222313873832302 -0.25348035474847274706 0.28925992009416712225 -0.31921289171320660349 -0.35256207382135501538 -0.45331584214755271667 -0.32777473622280467458 -0.20580990714223718063 -0.13978235107290584716 -0.094832598915819993346 0.15516660756829647738 0.084720806323187000664 -0.3405200795695027538 -0.49221355919113496391 -0.237820973731250912 0.089868839308112694053 -0.4127493586807607362 -0.33887564340048181855 -0.4425240943781740266 -0.4775662114256293278 -0.15357859480396351959 0.089211375163776321373 -0.073571092128920462239 -0.10063949103011626818 -0.074291584483863817856 -0.045635174610539570861 -0.0082664652389481049766 -0.10113407268258854665 -0.086793392531989893568 0.0099041992261535011233 0.048879486047190917608 0.11101897087403489461 -0.01988463326127961131 -0.051048839238650452199 -0.022909497715110947041 0.0093390001859961491171 -0.00318260113003693626 -0.11481420948466135312 -0.081946962401477890792 -0.034610071127154751203 0.13325731592489348243 0.03922030798221379233 -0.084811404260559566937 -0.061551037163643504413 -0.013681595677525006105 0.074675288820152327385 0.0099253843168129254892 -0.1600790168035805261 -0.068330802546881286297 -0.07753548002012049245 0.097445485822593713721 -0.036657876916342757578 -0.025817439812760165779 -0.1543873371629313207 -0.058711756321746300102 -0.078190584851557873303 0.009775155633556218554 0.044630791233674096952 0.022521317922939480816 -0.10072488897502124283 -0.013137055353221585574 0.028928968424933310111 0.015549035326236484988 -0.067818368648345395133 -0.079385879888051347208 -0.10674395396446166584 0.12559862480535333162 0.028858350514119196495 -0.097614010908891934992 -0.019444142999901190688 -0.34752585379910283514 0.0043023893406478330714 -0.080972849977663519105 0.029607459196414290248 -0.066523298072077630128 0.01063872236303185087 -0.18758177156544791897 0.15048036463226438508 0.18477064860051209405 -0.030084439234012560344 -0.057024242211444753359 -0.033548919506331049967 0.093501791969554326478;0.19811554044804366437 0.3565379640292618002 -0.15112549029427216341 -0.19246122331570658659 -0.078573706603222853717 -0.048864214458916858941 0.10432008006137234724 0.20509577241563956007 0.22277122500492760326 0.23172639376513515241 0.21666260239766174656 0.21974027553971139937 -0.050601624686480849158 0.10623602141831822721 0.12878814426385801206 0.25512833263692913377 0.24818646762507551307 -0.082026200286157313624 0.18412549819267023943 0.099284180879857159008 0.2017697229795899494 0.25535392176071797232 0.28712866062027148084 0.25147120523651173007 0.097326902443245350005 0.094430041090977245855 0.2666014690657327324 0.0073324806857084263989 0.11346542826522365566 0.18576664049904226261 0.062851117103289541599 0.024473961152700202115 0.096220601325951393701 0.16844973657176223747 0.15173639902799690438 0.14817363853247361716 0.042422311617684060892 0.1515662874583192099 0.26597320936606444475 0.02681620364533968473 0.060541000629596122828 0.15877527053840195803 0.40092953607483905465 -0.011134494272708694157 0.23945529519920402683 0.13756891506406657144 0.40273806054365096641 0.43478190519429554817 0.20156543333736776091 0.065804926035645028293 0.2340970358389518613 0.3399492768299846035 0.15897149424605719337 -0.049925452713754772671 0.17006447285570680528 0.1586860552920712486 0.20138411906796263584 0.16014739884881737386 0.11394070001753542343 0.1960963179047362781 0.22482160080258475898 0.051206757612704455196 0.06858575297678427829 0.16555433195275495728 0.28181089030776867999 0.081329874563246723485 0.079586662603706836983 0.18006568539224188097 0.33509812555780471577 0.32307324064433967648 0.15804249459445765535 0.078767664171938478468 0.074966706380863598613 0.17955167730458493347 0.21687324350165806952 0.23233362491271872252 0.26992175958085196097 0.035794266017754754194 -0.046892654510706878457 -0.21990482419957285698 -0.58345770040892697139 -0.61233712663955131017 0.15256053788952131378 0.19000546079166233393 -0.11323009320222530982];
  
  % Layer 2
  b2 = -10.274480101814376098;
  LW2_1 = [9.111354990723658176 -13.207567512190575343 -8.1471983323782080078 10.297608388799149637];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
  if isempty(settings_remove)
    y = x;
  else
    y = x(settings_keep,:);
  end
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
