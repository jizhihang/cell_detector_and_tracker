function [Y,Xf,Af] = testLinkerClassifierANN(X,~,~)
%TESTLINKERCLASSIFIERANN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Aug-2014 17:59:46.
% 
% [Y] = testLinkerClassifierANN(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 117xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_remove = [2 12 13 14 15 16 21 22 23 24 30 31 32 33 38 43 48 53 58 73 78 83 88 100 101];
  x1_step1_keep = [1 3 4 5 6 7 8 9 10 11 17 18 19 20 25 26 27 28 29 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 54 55 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76 77 79 80 81 82 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117];
  x1_step2_xoffset = [0;0;0;0;0;0;0;0;0;0;0.000965399958658963;0.000614681805018336;0;0;0;0.000104773505881894;0;0;0;0;0;0.000193199128261767;0;0;0;0;0;0;0;0.000517821405082941;0;0;0;0;0;0;0;0;0;0;0;0.000231557904044166;0;0;0;0;2.77555756156289e-17;0;0;0;0;0.000918301870115101;0;0;0;0;0;0;0;0;0;0;0;0.000308743881760165;0;0;0;0.000152706852531992;0;0;0;0;0;0;0;0;1;0;0;0;0;0;46;46;-1.6719925403595;0;0;-13.875;-9.77777767181396;-9.14407825469971;-8.34377098083496;0];
  x1_step2_gain = [0.0434782608695652;2.30702066013054;2.20989504417955;2.33243150942744;2.73752875657226;3.65051784269075;6.08419651480517;11.8104994319038;28.6826421986038;190.189381178822;2.33484550720066;2.72592838053776;4.60094816376142;51.6236376183915;2.53221827811827;3.46991600942983;2.28964394018125;25.6173775106653;130.076900595475;13.8082107673563;6.90410538367816;5.70890441818334;5.37209697923899;18.4932420743949;6.25968633133171;5.34373974790435;9.74679458504182;12.4365055700217;6.24499828680726;5.85189707991995;8.32165869548383;10.4642249520557;7.10242535368529;5.67646190823194;10.2848321445142;16.0312192437131;6.63324952095682;5.03051899853272;6.65732687383463;16.0312192437131;7.10242535368529;6.27618630972905;5.60863532179578;43.3589677406016;8.52291042442234;7.10242535368529;7.03800292264023;4.87339729252091;43.3589677406016;12.9957261133891;7.46190306544748;6.62083973385633;10.3279552980183;10.8397419351504;7.93977359135254;6.81175486605657;9.91071258210701;12.4365055700217;6.65732687383463;5.93295864266178;6.19677356028073;12.3648250792599;6.76461366759349;6.64004884866044;8.81759617826746;38.9358452049131;6.21825278501086;5.99347520455721;5.07092570178462;2;2;2;2;2;2;2;0.0714285714285714;0.0123456790123457;0.012987012987013;7.62078951379363e-05;8.4331253162422e-05;0.00964070940180999;0.0111731843575419;0.0112359550561798;0.352737908532708;2;2;0.101766785001003;0.109422493035583;0.106063585391334;0.145952561478408;11.4279147934145];
  x1_step2_ymin = -1;
  
  % Layer 1
  b1 = [-0.0048998723461244637206;4.7164396576505939265e-05];
  IW1_1 = [-0.024077672871342329503 0.010380329949164867134 0.061139248060850609479 0.098656590000245042438 0.029877124819375339843 -0.040039400581610450069 -0.044675310672026000147 -0.02913275779716271649 -0.019416760519374791361 -0.031898705312967914893 0.10027222836526979155 0.048765365040092163718 0.001124545180362639769 -0.034766530953217175681 0.050154491404296043522 -0.027141069536563779824 -0.022611744710270890307 -0.04474616088507081535 -0.0035750012879405511368 0.02523050484999385043 0.0036528700890846692306 0.015978463237947469061 0.025236571985895142611 0.011169788282958080516 0.010732145992644128579 0.03177511407745439026 0.025941112977105863779 0.019671496542648651829 0.044537653735253167342 -0.029823110617435529685 0.0073600427243228428234 -0.0064407600125637939903 0.013536840016412391915 0.032107498948282152396 0.0045249304496126152922 0.020486338758243662073 -0.00039951612936486109642 0.047157959928836500063 -0.014156240959618919539 0.050375448383555683496 0.078430341785133972365 -0.0072170138591111168691 -0.0006375207399881536877 -0.012229326697965859153 0.082887905104366138564 0.0062591901994336548998 0.038442779898376917835 -0.0065694186417665041341 -0.012263226850110373056 -0.0087093848269506925208 0.010032499123714568381 0.014617607413267062408 -0.032671170882499066257 -0.0016173706362146238712 0.013159125729062548862 -0.015696100393549565488 0.0042001238840300089694 -0.033155699829640720988 -0.012875323649856617453 0.022540165975100546342 0.038685604025130854167 -0.037229999975938420087 -0.0075030933807634092592 0.020677123008512442864 -0.0051513183362438107887 -0.031032959978613328111 -0.0094264286539724947978 0.024692524979201622981 0.040575867528699405273 -0.019310552523763024196 -0.033546778911349571517 -0.018080564493363367878 -0.018418611080697200322 -0.019159108684205505835 0.0090179657218496106497 0.20431795024810947559 0.17279060759018116666 0.34897940301181878953 0.36407698786901487864 0.33102501207226642244 0.35625640058899105123 0.38375615288661407698 0.19423495199851173454 -0.15161448435153268566 0.10262760732483328097 0.01725837932629474894 0.028805571805212700637 0.04468473299245655922 0.063178639356507804159 0.066188134130051201609 0.056126465471888098424 -0.017384536282424024184;-0.028249062108989777403 0.009962607690032456581 0.056992384254337030702 0.10135526669321201498 0.028743800604577089686 -0.045105803976272264288 -0.051119169836916236727 -0.036494447483352690509 -0.026545427319124677984 -0.038800532285992540837 0.10742795146718764343 0.052250766205247538287 -0.0022258318577570252936 -0.043442428849097727839 0.053051921665849328946 -0.030601695941932124251 -0.026724939379652229432 -0.050960585317906134661 -0.010500349513284101821 0.024654053901429235501 0.0030574905242782826273 0.011532827974775656729 0.027236909327460024494 0.0075491393899997857875 0.0074991692528428828893 0.03345145039627892003 0.020385743177051503239 0.020353454873338065051 0.045980235072461989043 -0.033894965618911122862 0.0022054931322538122787 -0.0075299350609221811156 0.0089944095433652018756 0.034009466152476318379 0.0048891406554556222225 0.025098141164629977212 0.00054276860008286784143 0.05021149324057867791 -0.018666178858912866462 0.048503090591729268455 0.083210660465239061345 -0.0044832786526150213147 -0.0036030318505573073404 -0.014337902410481707244 0.078056899120081610355 0.0053938989432156273993 0.039925822583127885956 -0.0072782736068266046248 -0.014273826596817343684 -0.010888310264700922642 0.0045371997417429730387 0.010437048932089611208 -0.044698565890621190511 -0.0058147909441693748644 0.00838575622538310049 -0.021025212810713928002 0.0019446980418427856595 -0.034974189438742898928 -0.015619025209808923629 0.022700826144773967458 0.044668649995378971462 -0.041396956109850363559 -0.0037433090846165756847 0.020565335817450351025 -0.0068580159748277734824 -0.043959004143381975871 -0.0050559308675660061608 0.026487837734519174837 0.043042570611458996765 -0.024299532205087383263 -0.035867066228198969668 -0.021028141686276893146 -0.028633841421041174302 -0.026605311476094305884 0.011420731773011214005 0.2223630916125585999 0.17625996350178818606 0.37222015192276991513 0.38698102879189877346 0.35249802739189123324 0.37563489626644930297 0.40913193370668632376 0.20580518881952705734 -0.16597784762347972398 0.11506072808812542463 0.018365531579434074549 0.028304830482437672717 0.045729641077688752693 0.070696396360103191947 0.066438744857399603672 0.06100773473841956257 -0.022872259893674959375];
  
  % Layer 2
  b2 = -1.0137548983591808671;
  LW2_1 = [-2.5595312488777732796 -3.2913338785148389398];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
  if isempty(settings_remove)
    y = x;
  else
    y = x(settings_keep,:);
  end
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
