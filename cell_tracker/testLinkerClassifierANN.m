function [Y,Xf,Af] = testLinkerClassifierANN(X,~,~)
%TESTLINKERCLASSIFIERANN neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 19-Jul-2014 22:55:34.
% 
% [Y] = testLinkerClassifierANN(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 110xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_remove = [2 14 15 16 22 23 24 30 31 32 33 38 43 48 53 58 73 78 83 88 100 109 110];
  x1_step1_keep = [1 3 4 5 6 7 8 9 10 11 12 13 17 18 19 20 21 25 26 27 28 29 34 35 36 37 39 40 41 42 44 45 46 47 49 50 51 52 54 55 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76 77 79 80 81 82 84 85 86 87 89 90 91 92 93 94 95 96 97 98 99 101 102 103 104 105 106 107 108];
  x1_step2_xoffset = [0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3.59722835128196e-05;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;46;41;-4.09213972091675];
  x1_step2_gain = [0.0136054421768707;2.90652540942163;2.03594339769179;2.22453971037998;2.2661917770324;2.66934324134796;3.82592962655991;5.52634296895388;8.92691135544028;21.2014145573032;21.3158949357296;149.211258625831;2.15238198726946;3.23195131002918;2.89185261997406;20.0758560709365;110.326792142022;2.16176805791407;2.53657463776784;2.11370854694141;8.15287624578416;100.697570935707;13.8082107673563;6.90410538367816;4.82182539825101;4.38853737271326;8.95823650438382;6.58280605906989;5.34373974790435;6.26276490399498;12.4365055700217;7.03562333417449;5.09501548573835;6.89347525784972;10.4642249520557;6.49999975785614;5.14241607225711;7.44983228435196;14.7648223857065;6.24499828680726;4.72941282264113;6.65732687383463;16.0277532493858;6.90410538367816;4.5981361714041;4.58257560677817;43.3589677406016;13.8082107673563;7.45117477070123;5.19025768043141;4.87339729252091;43.3589677406016;12.020815295909;7.46190306544748;5.30690742346193;7.03562333417449;10.8397419351504;6.51152815179889;5.93158261916995;9.91071258210701;12.4365055700217;5.42627363533498;5.25873755877293;6.19677356028073;12.3648250792599;6.05530078327738;5.16397764900917;6.892024659714;11.4891250363589;6.21825278501086;4.83045882217874;4.39851552995242;2;2;2;2;2;2;2;0.03125;0.00470588235294118;0.00680272108843537;6.13019461510209e-11;2.67695246890572e-10;0.0111111111111111;0.0109289617486339;0.287677045906678];
  x1_step2_ymin = -1;
  
  % Layer 1
  b1 = [0.19174892211949279286;-0.23762519792705716348;-0.12691322855114417489;0.84691784493530297695];
  IW1_1 = [0.0059756560234955633307 -0.13137996593710066229 0.14292219135271466701 0.0020785234736552869565 0.042572909329193366068 0.12651059969124114901 -0.053918700509305465818 -0.08164314442825439111 -0.11772205253150343218 -0.12058488682085571897 -0.088170183228640272577 -0.050186367531865887226 0.097531901352343908229 -0.0032468956722789821256 -0.056969730799715741221 -0.1000506192721416221 -0.055546522837000296413 0.20118903418196842914 -0.15786801297217600837 -0.066588225786992000232 -0.12783353935682767455 -0.065360425860528828523 -0.068012483600100648307 0.0037255134031229475249 0.0047679575775598521253 -0.020402495702696039903 0.078246690894985024278 0.043137213258947378069 -0.003288482244925213481 0.0029027153203818878424 0.0060945377375878108384 0.022276247899168773181 -0.025491366175304314146 0.044579413858713605456 0.0023306986704092328734 -0.024838190311833447527 0.015821390586515920312 -0.019209346149187848246 0.036296259706836017656 0.058801705509161694696 0.077881574019184302005 -0.029498855514639172465 0.037992537403882691016 0.10185849357087595202 -0.027627821001386183158 -0.014367534195141761638 -0.018525202815810964951 0.092404358212074239054 0.047618230191899028891 0.0091907250439260922137 -0.041080896800089264365 -0.080447528739876081327 -0.0018481646212712200296 0.057674697693809458265 0.029228503229229329391 0.011553752180434265218 0.045386646300442964885 0.023442326469195785832 0.031202202940539925519 -0.01441478864052270388 -0.027606627095371139707 0.017051294120950383215 0.041214415711714053048 0.001013929286045161084 0.056196608088806970782 0.018611638172708395988 0.047866055752398349588 0.0011295263670439703585 0.03638819589290699652 -0.032951221917337167322 0.0099122930636468126187 0.066144937221468150246 -0.05001141134812769895 -0.056013791245355978865 0.016792419332541667215 0.0011119669293515137536 -0.023183685437344378477 -0.012503740731593531582 0.063928767417719759014 0.33274994272648089622 0.50458624878377422718 0.62216302978046600369 -0.13262131240172625457 -0.17209099477609982043 0.22872089953465693513 -0.36599219105307168043 0.075611530932713819086;0.015493449494777655762 0.18776407514474807714 -0.11683534708616451214 -0.064720305052705012772 0.011624740767475189029 -0.28194603685804425774 -0.11948903298734014911 -0.10297753546982910122 -0.034757479384144224221 -0.0068480734282662814733 -0.021728734715608832156 -0.044461629349424047764 -0.185199378958588734 -0.12565054475877437956 -0.082445812675981361428 -0.042689942446789509722 0.037626888500465797971 -0.26171588339998519412 0.084765038791371913329 -0.045227402010494230367 -0.021196855846849358557 -0.035360494437651331101 0.14653408249382329775 0.030448349901529017658 -0.025332240111454414067 0.07315345280683570317 0.067873704559703137984 -0.11937657820541601461 0.018159771876209842428 0.035243194316569234625 0.10798780855703486725 -0.016994410164668370677 0.12370569255871041725 0.039450093470344782531 0.073142837559613038678 -0.059995445262115046359 0.065873803782574888444 0.072027860487091727171 -0.042240790894880642092 -0.052512646655813184637 -0.02710697697594188077 -0.040434091887266161713 0.14513721320754524591 -0.12718463159338574964 0.056959869344862842921 0.025106619924080350592 0.069552202330852755385 -0.06158623208305798874 0.073461066432498375867 -0.020307938879060256215 0.078357296581011037784 0.10136412160034742602 -0.048830767437079543314 0.058476690609436519919 0.10242417262781688958 -0.010666220896523859185 -0.038962072433202196708 -0.030815959745009058324 -0.0046200789531596862802 0.11932333405697791162 -0.097504818074768309644 -0.098051872301352191452 -0.093944057453683615933 0.088946723852370554453 -0.13115932171000377338 -0.059124337385324354788 -0.096871179048454311711 -0.015188408370123390734 0.1445341117921084273 0.13059418086472404652 0.0042156130700030476285 -0.094520043359667682559 0.061930774594637957864 -0.037461269754697948398 -0.0010629253363467238477 0.056371906370600209646 0.1293289075802467325 -0.099100171933383232603 -0.16733568700431147858 -0.25780150441885268942 -0.3968494045994796493 -0.6369427706611003881 0.22943665457885070724 0.23673923419965089976 -0.022988925779661807669 0.33654670268793313026 -0.008486552161360896504;0.073902445495787158491 0.07947315782384549443 -0.035874856116772234349 0.021385823416767878874 0.0031380374721573932491 0.015603914885665967627 0.043706850652457204798 0.067776004357210511975 0.088764056650774039725 0.098704967642472218881 0.10495497231526312865 0.094838303889565350735 0.0049031412718772201392 0.03387990129824872132 0.04373014815238956271 0.082605190647359189038 0.12052767821572799023 0.016530417136098918968 0.075680961104451285881 0.036433320364522236989 0.089405497098476796602 0.11113902377526295451 0.11114716358077635083 0.039857375558046408137 0.065592318326620921431 0.047135734454112350467 0.097840235885940055049 0.034710488341820749936 0.054143473420502866156 0.060706790342026785423 0.060395575232860029824 0.037686427937748123718 0.048449427835584181479 0.073187511211321942817 0.060515207173640207794 0.049389359907314467346 0.046121928817392202071 0.085525837828330869561 0.071812891577539658683 0.038154960295114712099 0.052059898164984214075 0.062298852776037985657 0.087527269896206821853 0.034826227579644174204 0.06669086200121432384 0.047131933394822668471 0.10931462945977210577 0.079477500798625450029 0.02937087814764136745 0.063809832610111791307 0.054797418293941149714 0.11255054585055619676 0.074227010983917124376 0.035589489314777650319 0.050980252952906542074 0.063912729055818795487 0.066674256192506220486 0.034420078455287467234 0.028248283079204537793 0.069884710950979769817 0.078074745111556209665 0.049559809682916594609 0.046179652131257201142 0.078452192520509902995 0.073993394763278416693 0.048613698773300989542 0.065595038015246034946 0.050728610779773801454 0.10188436780409013127 0.05149399199010376571 0.05649494727912130615 0.047236594304506586417 0.070703022321552150276 0.04079172360356170951 0.070182207888613290514 0.11268148257231143383 0.093544019174596759747 0.061487664219372753505 0.065649533142803098706 0.036731926746533853645 0.026968807589978265049 0.030371312554712173032 0.10683940557453089348 0.11761996938255263323 0.0070422464893415354439 0.071817565980569833539 -0.024736832843664686987;-0.084410927518613496079 -0.49869277088209040816 0.0074579595812483134853 0.1862507068204826699 -0.18192877906893159534 0.42541094875684681842 -0.07968119746174658069 0.097090816448944003425 -0.14285719759980625154 -0.19096657846249825985 0.04053613237112533435 0.21247061237529801803 0.15630816951937262504 0.050924025346576293205 -0.047975116498026271206 0.0026344299646717220416 -0.12438441193115595818 0.50312745929581548232 -0.31599058841764338101 -0.17846365239446718154 -0.10167856336030749176 0.054640728185217764257 -0.32182199017240420424 0.083734926825265107442 -0.034276328959352501957 -0.094956827683436370591 0.35214870377425977477 0.056448918769957896757 -0.14442764357121778973 0.049158228440068563181 -0.065047463412470654665 0.041077168252161309903 0.043212838683629149761 -0.032760866683911073205 0.043169971284344417495 -0.040008755598839686185 -0.091615543242620417486 -0.0070414222863847582279 -0.13980282001302157813 -0.0019583033930541263526 0.12721562845284978271 -0.06636153839926862974 0.058217125494045875167 0.17062446868003691702 -0.12691095021061910009 -0.10991415007645334578 -0.01673784502231579624 0.22149241173046019249 -0.12406749981763876001 -0.0069419806104747535866 -0.079132674912625766694 -0.33298000947559835971 -0.14338298648327782447 0.098974287178091036044 0.00415321003751243506 0.034227733823968188587 0.043272274825548656674 -0.014658898216605971074 0.030241281962394121058 -0.11145206369730482898 -0.088080147472284445187 -0.079773681855263900431 0.0047989609205885070189 -0.0095300468692061900133 0.037637616324772506238 -0.045357163765595863436 0.078510992193688303176 -0.058137861133419718729 0.08092978314589240052 -0.026653091532438045325 -0.034366055326274423665 0.003309715127235424853 -0.026776617374743162669 -0.034786989644413145173 -0.03856759715837378838 -0.019618531773832478815 -0.015191193487936089507 0.017509747002721391673 -0.011295880947674783595 0.83151915354514427392 1.4738987802300340668 2.0055811641688876534 -0.71023886094617239007 -0.84638167037158307249 0.46205814085567953331 -0.99071851955228928954 0.24368108917457431684];
  
  % Layer 2
  b2 = -1.5295675872909126891;
  LW2_1 = [-1.2998452671948681481 1.2446045315356588645 1.2627023014576210791 -4.3595193629816249015];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
  if isempty(settings_remove)
    y = x;
  else
    y = x(settings_keep,:);
  end
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
