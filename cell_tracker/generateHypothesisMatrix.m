function [M, P] = generateHypothesisMatrix(tracklets, options)
	% GENERATEHYPOTHESISMATRIX generates a matrix with probablities that each tracklet might be an initializer, terminator, linker, false positive.
	% For each tracklets it computes the following hypothesis:
	% 	- initialization
	% 	- termination
	% 	- link with each of the following tracklets
	% 	- false positive

	% Inputs:
	% 	tracklets = a tracklets matrix generated by the generateTracklets() function
	% 	options = a struct containing any of:
	% 		maxGap = [20] maximum gap between tracks that may be closed
	% Outputs:
	% 	M = a sparse row matrix containing a row for each tracklet hypotesis. The dimensions of this matrix are numHypothesis x (2*nTracklets)
	% 	P = a column vector of length numHypothesis containing probablities for each hypothesis

	%------------------------------------------------------------------Options
	% Defaults
	maxGap = 20; 

	% Overrides
	if isfield(options, 'maxGap')
		maxGap = options.maxGap;
	end
	%--------------------------------------------------------Preallocate space

	numTracklets = size(tracklets, 1);

	% To know the total number of hypothesis, I need to know the number of link
	% hypothesis for each tracklet. I need to find out the number of tracklets
	% starting in the following maxGap frames after the last cell in the
	% tracklet

	numHypothesis = 4 * numTracklets;
	% P = zeros(numHypothesis, 1);

	% I = zeros(numHypothesis, 1);
	% J = zeros(numHypothesis, 1);

	%-------------------------------------------------------Compute hypothesis


