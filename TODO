Today:
	✔	T3.3 @done (14-07-10 09:33)
	✔	T19 @done (14-07-10 15:19)
	✔	T3.4 @done (14-07-10 16:17)
	✔	T16 @done (14-07-11 10:18)
	✔	T3.1 @done (14-07-11 12:49)
	✔	T3.2 @done (14-07-11 12:49)
	✔	T3 @done (14-07-11 15:04)
	✔	T21 @done (14-07-11 17:13)
	✔	T22 @done (14-07-11 17:14)
	☐	T20
	☐	T8
Cell matcher:
	☐	5) Train ANN and NB with much more data, possibly of all different datasets combined (reqs: M6)
	☐	6) Annotate more datasets
	☐	7) To match cells accross frames, use the robust tracklets to learn a similarity model using all possible larger displacements between them (up to a higher limit eg 50 frames)
	☐	8) Build the matrix to learn to classify jointing tracklets
Cell detector:
	☐ If any detector NaN, in the end don't show average NaN.
	☐ Read Pylon stuff
	☐ New features to try:
		☐ Histeq + Laplacian(0.2) creates empty places in maximums, noise everywhere else
		☐ use the builtin canny edge detector, with params 0.6+
	☐	Make it clear in the headers of the files which belong to Arteta, which have some of my changes, which are completely mine
	☐	Detect cells in all datasets (reqs: M6)
Cell tracker:
	✔	3) compute the likelihoods (reqs: T3.1 T3.2 T3.3 T3.4) @done (14-07-11 15:05)
	✔	3.1) Compute init prob (Pinit could be 1 - max(Plink of previous)) (reqs T3.4 T16) @done (14-07-11 12:49)
	✔	3.2) Compute term prob (Pterm could be 1 - max(Plink to any future cells)) (reqs T3.4 T16) @done (14-07-11 12:49)
	✔	3.3) Compute FP prob @done (14-07-10 09:33)
	✔	3.4) Compute link prob @done (14-07-10 16:17)
	☐	5) Tracklet linking features: direction over last N frames, average displacement over last N frames, td of displacement over last N frames, gaussian broadening idea
	✔	6) Read Single Quantum Dot Tracking paper @done (14-07-11 10:20)
	☐	7) Skip blurred frames, and leave an annotation that you skipped a frame (reqs: S4)
	✔	15) In the code, replace probability with likelihood @done (14-07-11 15:11)
	✔	16) Figure out how to bring in the cell descriptors @done (14-07-11 10:18)
	☐	17) Correctly estimate the number of missedetections of the detector
	☐	18) Add parameters so that the user can tweak the probabilities of Pfp, Ptp, Plink, Pinit, Pterm
	✔	19) Separate the code of generating Link hypothesis and computing the Likelihoods, or it will get messy @done (14-07-10 15:19)
	☐	20) Transform the tracklets to contain the indices of cells instead of their x-y coordinate (reqs T22).
	✔	21) Review and streamline the cell_tracking process (from generating the tracklets matrix to joining tracklets) @done (14-07-11 17:13)
	✔	22) Measure the memory usage before the change to store indices within tracklets matrix @done (14-07-11 17:13)
	☐	22) Measure the memory usage before the change to store indices after tracklets matrix (reqs: T20)

Cell annotator:
	☐ 1) Larger marker for detections
	☐ 2) Copy anotations over
	☐ 3) Copy links over
	☐ 4) Diplay links in different colors
	☐ 5) New tab/window that displays the tracklets in 3d
	☐ 6) Elimintate uncessary filters
	☐ 7) Colormap: change marker colors for best visibility
	☐ 8) Help window
	☐ 9) For whatever I do, I would like to have high quality data, to be able to see if algorithms work or not. For this reason, I will spend the next day or two annotating datasets
	☐ 10) skip bad frames annotation
	☐ 11) Menu bar for basic tools (load dets...)
	☐ 12) Show dots should only toggle annotation dots
	☐	 13) Possibly add a button show generated tracks to complement show links
Cell stabilizer:
	☐	1) Read how to easily do image stabilization in matlab (instaed of SIFT, RANSAC, homography, etc, which might take too long)
	☐	2) Eliminate all detected cells from the images and extract sifts of the remaining regions (or extract sifts everywhere, elimintae those close to the detected cells)
	☐	3) Given the number of SIFTs detected, or their distribution (eg only bottom part of image), it may be possible to detect bad frames. Just analyse. (reqs: S2)
	☐	4) Store the names of bad or correct frames in a file, so they can be skipped in the tracker (reqs: S3)
Evaluations:
	☐ Evaluations with single type of cells (red/green)
	☐ Evaluations with different number of training/testing examples
	☐ Train a compound model with cells of different images
	☐	Try the tracker effectiveness if frames are skipped: what is the max number of frames that can be skipped while still obtaining good enough tracks
Biological statics:
	☐	Discover (find in prev papers) stats that might be of interest
Final GUI:
	☐	plan design/workflow on paper
	☐	Ask Leo if we also need the option to train a new model
Approaches to solve the MAP problem of connecting tracklets:
	☐ Hungarian algorithm (cannot handle division)
	☐ Linear programming (handles division)
	☐ Network flow
Data flow process:
	☐ annotator: IN: any, OUT: dots + links # I have lost Match features
	☐ detector train: IN: dots + [links], OUT: dots
	☐ detector test : IN: images, OUT: dots + MatchFeatures
	☐ tracker: IN: dots + Match features, OUT: robust tracklets
	☐ linker : IN: dots + robust matches, OUT: dots + links

Track evaluation metrics:
	(1) MOTA: Multiple Object Tracking Accuracy, calculated from the number of false alarms, missed detections, and identity switches;
	(2) FGTIM: Fraction of Ground Truth Instances Missed; and
	(3) FAPF: False Alarm Per Frame.
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
	✔	T8 @done (14-07-09 10:14) @project(Today)
	✔	T13 @done (14-07-09 16:39) @project(Today)
	✔	T14 @done (14-07-09 16:05) @project(Today)
	✔	T9 @done (14-07-09 14:39) @project(Today)
	✔	T10 @done (14-07-09 10:21) @project(Today)
	✔	T11 @done (14-07-09 13:14) @project(Today)
	✔	T12 @done (14-07-09 13:31) @project(Today)
	✔	8) Human display results of learning connections @done (14-07-09 10:14) @project(Cell tracker)
	✔	9) Connect tracklets based on global optimisation @done (14-07-09 14:39) @project(Cell tracker)
	✔	10) Functionalize finding global optimization @done (14-07-09 10:20) @project(Cell tracker)
	✔	11) Update tracklets based on optimal data association @done (14-07-09 13:14) @project(Cell tracker)
	✔	12) Add title to hypothesis prints @done (14-07-09 13:31) @project(Cell tracker)
	✔	13) BUGFIX: updating trcklets based on optimal data association is broken @done (14-07-09 16:39) @project(Cell tracker)
	✔	14) Add Hypothesis printer: table and fulltable @done (14-07-09 16:05) @project(Cell tracker)
	✔	T2 @done (14-07-08 16:42) @project(Today)
	✔ 2) Start building the hypothesis matrix (just the structure) @done (14-07-08 16:42) @project(Cell tracker)
	✔	T4 @done (14-07-07 16:21) @project(Today)
	✔	4) Research lpsolve in Matlab and replicate the example in the paper, to see if you get the same result @done (14-07-07 16:21) @project(Cell tracker)
	✔ 1) Robust tracklets (reqs: M1, M2, D1, D2 ) @done (14-07-07 12:13) @project(Cell tracker)
	✔	T1 @done (14-07-07 12:13) @project(Today)
	✔	M3 @done (14-07-07 12:13) @project(Today)
	✔	4) Train a matcher using a Naive Bayesian classifier @done (14-07-07 12:13) @project(Cell matcher)
	✔	3) Update the match function to the trained neural network @done (14-07-07 12:13) @project(Cell matcher)
	✔ 2) build a algorithm to decide if the vectors match (make sure the algorithm is good with outliers... not all descriptors will be of good quality due to high image noise). The output of the algorithm should be the probability of linking. > 0.5 link, else not. @done (14-07-04 17:06) @project(Cell matcher)
	✔	M2 @done (14-07-04 17:05) @project(Today)
	✔ 1) Given the detection results and the annotated links create a matrix det1 det2 [binary] indicating if the detectors match or not @done (14-07-04 12:12) @project(Cell matcher)
	✔	M1 @done (14-07-04 12:12) @project(Today)
	✔ 2) Run detector on an example annotated dataset to extract new descriptors @done (14-07-03 16:28) @project(Cell detector)
	✔ 1) detector saves more features @done (14-07-03 16:28) @project(Cell detector)
	✔	D2 @done (14-07-03 16:28) @project(Today)
	✔	D1 @done (14-07-03 16:28) @project(Today)
 ✔ genreateTraclets: withAnnotations @done (14-07-03 13:09) @project(Today)
 ✔ Make all vectors vertical to prevent uneccessary transposes @done (14-07-03 11:58) @project(Today)
 ✔ The feature vectors should be normalized by group: if a feature takes several cols, normalize it to 0-max of the set of cols @done (14-06-23 14:23) @project(Today)
 ✔ The cell detector should have an option to output 2 different feature vectors @done (14-06-23 14:23) @project(Today)
 ✔ Refactor params by groupping all the options in a struct @done (14-06-20 14:43) @project(Today)
 ✔ Where should I store the matching feautres data? in the im\d.mat: dots and matchFeatures @done (14-06-20 10:55) @project(Today)
 ✔ Prevent dupes @done (14-06-20 09:05)
 ✔ Load detections as well @done (14-06-20 09:05)
 ✔ Toggles: show detections, show links @done (14-06-19 09:11)
 ✔ Ask for confirm if reloading images and dirtynees exists @done (14-06-19 09:10)
 ✔ check that the links format is OK @done (14-06-18 10:02) @project(Today)
 ✔ annotation GUI @done (14-06-18 10:02)
 ✔ add link @done (14-06-18 10:02) @project(Today)
 ✔ Fix new window when click close after save (due to background change) @done (14-06-18 10:02) @project(Today)
 ✔ Delete cell fixes the links matrix also @done (14-06-17 15:37)
 ✔ Add cell fixes the link matrix also @done (14-06-17 15:18)
 ✔ save links @done (14-06-16 15:09) @project(Today)
 ✔ Correct format of links @done (14-06-16 15:09) @project(Today)
 ✔ Create ureSymmAnnotations if nonex @done (14-06-16 14:36) @project(Today)
 ✔ Load usrSymmAnnotations @done (14-06-16 14:35) @project(Today)
 ✔ Cache usrSymmAnnotation @done (14-06-16 14:35) @project(Today)
 ✔ See if some methods can be taken out @done (14-06-16 12:19)
 ✔ delete detection @done (14-06-16 10:37) @project(Today)
 ✔ Save should remove all the dirty flags @done (14-06-16 09:29)
 ✔ add detection @done (14-06-14 22:51)
 ✔ 4 buttons: +, -, + link, - link @done (14-06-14 22:51)
 ✔ Load best feature vector automatically @done (14-06-12 11:08)
 ✔ Functionalize tracklet generation @done (14-06-12 10:42)
 ✔ Use function to access data @done (14-06-12 09:40)
 ✔ read paper on SVMstruct @done (14-06-12 09:12)
 ✔ Try other feature (SIFT, ... ) @done (14-06-12 09:12)
 ✔ Write down the list of features used in the classifier (P4) @done (14-05-28 11:31)
 ✔ Remove one useless feature @done (14-05-28 11:31)
 ✔ Modify the code so that these feature can be removed one by one @done (14-05-28 11:31)
 ✔ Explore how these features are implemented @done (14-05-28 11:31)
 ✔ Run the profiler without the concurrency features, which prevent efficient profiling @done (14-05-20 09:09)
 ✔ Test arteta code in kidney images @done (14-05-19 11:36)
 ✔ Prepare kidney images @done (14-05-19 11:36)
 ✔ Define a testing set, and run algorithm on it to see how well it generalizes @done (14-05-19 11:36)
 ✔ Annotate subset of kidney images @done (14-05-19 11:36)
 ✔ Test arteta code in train images (P3) @done (14-05-16 14:40)
 ✔ Train a new classifier using my annotated images (P2) @done (14-05-16 14:29)
 ✔ Train a classifier using the demo data, to see how long it takes (P1) @done (14-05-15 21:37)
 ✔ Write down about this function @done (14-05-13 13:14)
 ✔ Write a function to convert the points to the required matalb format and save @done (14-05-13 13:14)
 ✔ Write down how annotation is performed @done (14-05-13 11:57)
 ✔ split the video into individual frames and save them to the folders @done (14-05-12 22:47)
 ✔ for each channel create a new folder @done (14-05-12 22:47)
 ✔ Split video sequence into 2 channels @done (14-05-12 22:47)
 ✔ Annotate the Lung dataseth @done (14-05-12 22:47)
 ✔ Test arteta code in given samples to learn how to use it @done (14-05-11 19:03)
 ✔ email paper author for code @done (14-05-06 10:45)
 ✔ email Dr Leo for exaplanation of TIFF @done (14-05-06 10:45)
 ✔ Install dependencies for Arteta code @done (10-05-11 19:03)
