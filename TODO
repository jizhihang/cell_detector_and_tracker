 Today:
 ☐ setAnnotation()
     
 ☐ Ask for confirm if reloading images and dirtynees exists
 ✔ Delete cell fixes the links matrix also @done (14-06-17 15:37)
 ✔ Add cell fixes the link matrix also @done (14-06-17 15:18)
 ☐ Prevent dupes
 ☐ annotation GUI
     ☐ add link
         ✔ Load usrSymmAnnotations @done (14-06-16 14:35)
         ✔ Cache usrSymmAnnotation @done (14-06-16 14:35)
         ✔ Create ureSymmAnnotations if nonex @done (14-06-16 14:36)
         ✔ save links @done (14-06-16 15:09)
         ✔ Correct format of links @done (14-06-16 15:09)
         ☐ check that the links format is OK

  ☐ Load detections as well
  ☐ Toggles: show detections, show links
  ☐ Fix new window when click close after save (due to background change)
TODO:
 ☐ Create 2 feature vectors per candidate cell, one for detection one for matching, each with a different subset of features.
     ☐ Include position
     ☐ Mean intensity
     ☐ Orientation
     ☐ cpdh?
 ☐ Find effective matching features
 ☐ Find robust tracklets only
 ☐ compute the remaining probabilities
 ☐ If any detector NaN, in the end don't show average NaN.
 ☐ skip bad frames (leave an annotation to take into account in the algorithm)
 ☐ Train a compound model
 ☐ Read Pylon stuff
 ☐ New features to try:
     ☐ Histeq + Laplacian(0.2) creates empty places in maximums, noise everywhere else
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ See if some methods can be taken out @done (14-06-16 12:19)
 ✔ delete detection @done (14-06-16 10:37) @project(Today)
 ✔ Save should remove all the dirty flags @done (14-06-16 09:29)
 ✔ add detection @done (14-06-14 22:51)
 ✔ 4 buttons: +, -, + link, - link @done (14-06-14 22:51)
 ✔ Load best feature vector automatically @done (14-06-12 11:08)
 ✔ Functionalize tracklet generation @done (14-06-12 10:42)
 ✔ Use function to access data @done (14-06-12 09:40)
 ✔ read paper on SVMstruct @done (14-06-12 09:12)
 ✔ Try other feature (SIFT, ... ) @done (14-06-12 09:12)
 ✔ Write down the list of features used in the classifier (P4) @done (14-05-28 11:31)
 ✔ Remove one useless feature @done (14-05-28 11:31)
 ✔ Modify the code so that these feature can be removed one by one @done (14-05-28 11:31)
 ✔ Explore how these features are implemented @done (14-05-28 11:31)
 ✔ Run the profiler without the concurrency features, which prevent efficient profiling @done (14-05-20 09:09)
 ✔ Test arteta code in kidney images @done (14-05-19 11:36)
 ✔ Prepare kidney images @done (14-05-19 11:36)
 ✔ Define a testing set, and run algorithm on it to see how well it generalizes @done (14-05-19 11:36)
 ✔ Annotate subset of kidney images @done (14-05-19 11:36)
 ✔ Test arteta code in train images (P3) @done (14-05-16 14:40)
 ✔ Train a new classifier using my annotated images (P2) @done (14-05-16 14:29)
 ✔ Train a classifier using the demo data, to see how long it takes (P1) @done (14-05-15 21:37)
 ✔ Write down about this function @done (14-05-13 13:14)
 ✔ Write a function to convert the points to the required matalb format and save @done (14-05-13 13:14)
 ✔ Write down how annotation is performed @done (14-05-13 11:57)
 ✔ split the video into individual frames and save them to the folders @done (14-05-12 22:47)
 ✔ for each channel create a new folder @done (14-05-12 22:47)
 ✔ Split video sequence into 2 channels @done (14-05-12 22:47)
 ✔ Annotate the Lung dataseth @done (14-05-12 22:47)
 ✔ Test arteta code in given samples to learn how to use it @done (14-05-11 19:03)
 ✔ email paper author for code @done (14-05-06 10:45)
 ✔ email Dr Leo for exaplanation of TIFF @done (14-05-06 10:45)
 ✔ Install dependencies for Arteta code @done (10-05-11 19:03)
